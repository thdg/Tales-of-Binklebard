 "use strict";

/************************************************************************\

 A module which handles arbitrary entity-management for the simulation

\************************************************************************/

var particleManager = {

    // "PRIVATE" DATA

    _textParticles     : [],
    _textParticlePool  : [],

    // PUBLIC METHODS
	
    KILL_ME_NOW : -1,

    deferredSetup : function () {
        this._categories = [this._textParticles];
    },

    init: function() {

        ctx.lineWidth = 2;
        ctx.font = "20px irish-grover, sans-serif";
    },

    generateTextParticle: function(posX, posY, text, style, lifespan) {

        var particle = new TextParticle();
        particle.setup(posX, posY, text, style, lifespan);
        this._textParticles.push(particle);
    },

    update: function(du) {

        for (var c = 0; c < this._categories.length; ++c) {

            var aCategory = this._categories[c];
            var i = 0;

            while (i < aCategory.length) {

                var status = aCategory[i].update(du);

                if (status === this.KILL_ME_NOW) {
                    aCategory.splice(i,1);
                }
                else {
                    ++i;
                }
            }
        }
    },

    // particles have a small lifespan and are generated by the player
    // so 99% of the time they are on screen, thus we can just render
    // them here instead of bothering to use the renderingManager
    render: function(ctx) {
        
        for (var c = 0; c < this._categories.length; ++c) {

            var aCategory = this._categories[c];
            for (var i=0; i<aCategory.length; i++) {
                aCategory[i].render(ctx);
            }
        }
    }

};

particleManager.deferredSetup();
